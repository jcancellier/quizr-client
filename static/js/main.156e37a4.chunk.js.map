{"version":3,"sources":["redux/reducers/AuthReducer.js","redux/reducers/ServerReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store/index.js","global/styles/theme.js","routing/ProtectedRoute.js","pages/Home/style.js","global/components/AppHeader.js","pages/Home/HomePage.js","redux/actions/AuthActions.js","pages/JoinQuiz/JoinQuizPage.js","routing/Router.js","routing/index.js","App.js","api/hub/index.js","redux/actions/ServerActions.js","helpers/serviceWorker.js","index.js"],"names":["INITIAL_STATE","authToken","user","isLoggedIn","isLoggingIn","hubConnection","usersOnline","isHubConnectionLoading","combineReducers","auth","state","action","type","payload","server","middleware","ReduxThunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","theme","createMuiTheme","palette","typography","fontFamily","ProtectedRoute","connect","props","component","other","to","HomePageContainer","styled","div","AuthFormTextContainer","AuthForm","form","Header","Footer","Divider","AppHeader","AppBar","position","color","Toolbar","HeaderText","variant","buttons","Button","defaultProps","Typography","minUsernameInputTextLength","Home","usernameInputText","submitAuthenticationFormDisable","submitAuthenticationFormError","handleUsernameInputTextChange","e","setState","target","value","validateFormFields","renderConnectButton","endIcon","Person","disabled","onClick","handleSubmitAuthenticationForm","length","preventDefault","history","push","joinquizRoutePath","setIsLoggingIn","connection","invoke","then","console","info","setIsLoggedIn","setUser","catch","err","log","toString","onSubmit","this","TextField","id","label","onChange","error","helperText","Component","HomePage","JoinQuizPage","Router","basename","exact","path","AppContainer","App","errorLoadingHubConnection","setIsHubConnectionLoading","loading","determineLoadingOverlayText","signalR","withUrl","WebSockets","withAutomaticReconnect","build","onreconnecting","onreconnected","start","setHubConnection","alert","primary","ThemeProvider","active","spinner","fadeSpeed","text","styles","base","stroke","content","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.156e37a4.chunk.js","sourcesContent":["import { SET_AUTH_TOKEN, SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  authToken: '',\r\n  user: '',\r\n  isLoggedIn: false,\r\n  isLoggingIn: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_TOKEN:\r\n      return { ...state, authToken: action.payload }\r\n    case SET_USER:\r\n      return { ...state, user: action.payload }\r\n    case SET_IS_LOGGED_IN:\r\n      return { ...state, isLoggedIn: action.payload }\r\n    case SET_IS_LOGGING_IN:\r\n      return { ...state, isLoggingIn: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  hubConnection: null,\r\n  usersOnline: null, // How many users are online\r\n  isHubConnectionLoading: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_HUB_CONNECTION:\r\n      return { ...state, hubConnection: action.payload }\r\n    case SET_USERS_ONLINE:\r\n      return { ...state, usersOnline: action.payload }\r\n    case SET_IS_HUB_CONNECTION_LOADING:\r\n      return { ...state, isHubConnectionLoading: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n        ","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ServerReducer from './ServerReducer';\r\n\r\nexport default combineReducers({\r\n  auth: AuthReducer,\r\n  server: ServerReducer\r\n})\r\n","// Auth types\r\nexport const SET_AUTH_TOKEN = 'AUTH/SET_AUTH_TOKEN';\r\nexport const SET_USER = 'AUTH/SET_USER';\r\nexport const SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN';\r\nexport const SET_IS_LOGGING_IN = 'AUTH/SET_IS_LOGGING_IN';\r\n\r\n// Server types\r\nexport const SET_USERS_ONLINE = 'SERVER/USERS_ONLINE';\r\nexport const SET_HUB_CONNECTION = 'SERVER/SET_HUBCONNECTION';\r\nexport const SET_IS_HUB_CONNECTION_LOADING = 'SERVER/IS_HUB_CONNECTION_LOADING';","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nlet middleware = [ReduxThunk];\r\n\r\nconst store = createStore(reducer, {}, composeWithDevTools(\r\n  applyMiddleware(...middleware),\r\n));\r\n\r\nexport default store;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Varela Round', sans-serif\"\r\n  }\r\n})\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ProtectedRouteComponent = (props) => {\r\n\r\n  const renderPageOrRedirect = () => {\r\n    if (props.isLoggedIn) {\r\n      return <props.component />\r\n    } else {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n\r\n  const {component, ...other} = props;\r\n\r\n  return (\r\n    <Route {...other}>\r\n      {\r\n        renderPageOrRedirect()\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nconst mapStateStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn\r\n  }\r\n}\r\n\r\nconst ProtectedRoute = connect(mapStateStateToProps)(ProtectedRouteComponent)\r\n\r\nexport { ProtectedRoute };\r\n","import styled from 'styled-components';\r\n\r\nexport const HomePageContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const AuthFormTextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  // padding-bottom: 1rem;\r\n\r\n  // @media (max-width: 768px) {\r\n  //   flex-direction: column;\r\n  // }\r\n`;\r\n\r\nexport const AuthForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n  height: 0.7rem;\r\n`;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst AppHeader = (props) => {\r\n  return (\r\n    <AppBar position=\"static\" color='primary'>\r\n      <Toolbar>\r\n        <HeaderText variant=\"h4\">Quizr</HeaderText>\r\n        { props.buttons && <Button color=\"inherit\">Create Quiz</Button>}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nAppHeader.defaultProps = {\r\n  buttons: true\r\n}\r\n\r\n// styles\r\nconst HeaderText = styled(Typography)`\r\n  flex: 1;\r\n`;\r\n\r\nexport { AppHeader };","import React, { Component, Fragment } from 'react';\r\nimport { Person } from '@material-ui/icons';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  // LinearProgress\r\n} from '@material-ui/core';\r\nimport {\r\n  HomePageContainer,\r\n  AuthFormTextContainer,\r\n  AuthForm,\r\n  Header,\r\n  Footer,\r\n  Divider\r\n} from './style';\r\nimport {\r\n  AppHeader\r\n} from '../../global/components';\r\nimport { connect } from 'react-redux';\r\nimport { setIsLoggedIn, setUser, setIsLoggingIn } from '../../redux/actions/AuthActions';\r\nimport { joinquizRoutePath } from '../../routing';\r\n\r\nconst minUsernameInputTextLength = 1;\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    usernameInputText: '',\r\n    submitAuthenticationFormDisable: true,\r\n    submitAuthenticationFormError: false\r\n  }\r\n\r\n  handleUsernameInputTextChange = (e) => {\r\n    this.setState({ usernameInputText: e.target.value }, () => {\r\n      this.validateFormFields();\r\n    })\r\n  }\r\n\r\n  renderConnectButton = () => {\r\n    const { isLoggedIn } = this.props;\r\n    return (\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<Person />}\r\n        disabled={isLoggedIn ? false : this.state.submitAuthenticationFormDisable}\r\n        onClick={this.handleSubmitAuthenticationForm}\r\n        type=\"submit\"\r\n      >\r\n        {this.props.isLoggedIn ? \"Reconnect\" : \"Login\"}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  validateFormFields = () => {\r\n    if (this.state.usernameInputText.length >= minUsernameInputTextLength) {\r\n      this.setState({ submitAuthenticationFormDisable: false });\r\n    } else {\r\n      this.setState({ submitAuthenticationFormDisable: true });\r\n    }\r\n  }\r\n\r\n  handleSubmitAuthenticationForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    // If logged in just navigate user to join quiz page\r\n    if (this.props.isLoggedIn) {\r\n      this.props.history.push(joinquizRoutePath);\r\n      return;\r\n    }\r\n\r\n    this.props.setIsLoggingIn(true);\r\n    // Login\r\n    this.props.connection.invoke(\"Login\", this.state.usernameInputText)\r\n      .then(user => {\r\n        this.props.setIsLoggingIn(false);\r\n        console.info(`Logged in as user ${user}`);\r\n        this.props.setIsLoggedIn(true);\r\n        this.props.setUser(user);\r\n        this.props.history.push(joinquizRoutePath);\r\n      })\r\n      .catch(err => {\r\n        this.props.setIsLoggingIn(false);\r\n        console.log(err.toString())\r\n        this.setState({ submitAuthenticationFormError: true })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppHeader />\r\n        {/* <LinearProgress/> */}\r\n        <HomePageContainer>\r\n          <Header>\r\n            {/* Welcome back,\r\n            jcancellier! */}\r\n          </Header>\r\n          <AuthForm onSubmit={this.handleSubmitAuthenticationForm}>\r\n            <AuthFormTextContainer>\r\n              {!this.props.isLoggedIn && <TextField\r\n                id='username-input'\r\n                label='Username'\r\n                value={this.state.usernameInputText}\r\n                onChange={e => this.handleUsernameInputTextChange(e)}\r\n                variant='outlined'\r\n                error={this.state.submitAuthenticationFormError}\r\n                helperText={this.state.submitAuthenticationFormError ? 'Username already being used' : null}\r\n              />}\r\n              <Divider />\r\n              {this.renderConnectButton()}\r\n            </AuthFormTextContainer>\r\n          </AuthForm>\r\n          <Footer />\r\n        </HomePageContainer>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    connection: state.server.hubConnection,\r\n    isLoggedIn: state.auth.isLoggedIn\r\n  }\r\n}\r\n\r\nconst HomePage = connect(mapStateToProps, {\r\n  setIsLoggedIn,\r\n  setUser,\r\n  setIsLoggingIn\r\n})(Home);\r\n\r\nexport {\r\n  HomePage\r\n};\r\n","import { SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from './types';\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn) => {\r\n  return {\r\n    type: SET_IS_LOGGED_IN,\r\n    payload: isLoggedIn\r\n  }\r\n}\r\n\r\nexport const setIsLoggingIn = (isLoggingIn) => {\r\n  return {\r\n    type: SET_IS_LOGGING_IN,\r\n    payload: isLoggingIn\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { AppHeader } from '../../global/components';\r\n\r\nclass JoinQuizPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppHeader buttons={false} />\r\n        <h1>Join Quiz Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { JoinQuizPage };","import React from 'react';\r\nimport { HomePage, JoinQuizPage } from '../pages';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport { ProtectedRoute, joinquizRoutePath } from '.';\r\n\r\nconst Router = (props) => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <ProtectedRoute path={joinquizRoutePath} component={JoinQuizPage} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport { Router };\r\n","export * from './ProtectedRoute';\r\nexport * from './Router';\r\n\r\nexport const joinquizRoutePath = \"/joinquiz\"\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setHubConnection } from './redux/actions/ServerActions';\r\nimport { quizrHubProductionUrl } from './api/hub';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport theme from './global/styles/theme';\r\nimport styled from 'styled-components';\r\nimport { Router } from './routing';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isHubConnectionLoading: false,\r\n    errorLoadingHubConnection: false\r\n  }\r\n\r\n  setIsHubConnectionLoading = (loading) => {\r\n    this.setState({ isHubConnectionLoading: loading })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setIsHubConnectionLoading(true);\r\n\r\n    let connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(quizrHubProductionUrl, signalR.HttpTransportType.WebSockets)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n\r\n    connection.onreconnecting(() => { this.setIsHubConnectionLoading(true) })\r\n    connection.onreconnected(() => { this.setIsHubConnectionLoading(false) })\r\n    connection.start()\r\n      .then(() => {\r\n        this.props.setHubConnection(connection);\r\n        this.setIsHubConnectionLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n        this.setIsHubConnectionLoading(false);\r\n        this.setState({ errorLoadingHubConnection: true });\r\n      })\r\n  }\r\n\r\n  determineLoadingOverlayText = () => {\r\n    if (this.state.errorLoadingHubConnection) {\r\n      return \"Error connecting to server. Please refresh page to try again!\"\r\n    }\r\n    else if (this.state.isHubConnectionLoading) {\r\n      return \"\"\r\n    }\r\n    else if (this.props.isLoggingIn)\r\n      return \"Logging in\"\r\n    else\r\n      return \"\"\r\n  }\r\n\r\n  render() {\r\n    console.log(`${theme.palette.primary[theme.palette.type]}`)\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <LoadingOverlay\r\n          active={this.state.isHubConnectionLoading || this.props.isLoggingIn || this.state.errorLoadingHubConnection}\r\n          spinner={!this.state.errorLoadingHubConnection}\r\n          fadeSpeed={0}\r\n          text={this.determineLoadingOverlayText()}\r\n          styles={{\r\n            spinner: (base) => ({\r\n              ...base,\r\n              '& svg circle': {\r\n                stroke: `${theme.palette.primary[theme.palette.type]}`\r\n              }\r\n            }),\r\n            content: (base) => ({\r\n              ...base,\r\n              fontFamily: theme.typography.fontFamily\r\n            })\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <AppContainer>\r\n            <Router />\r\n          </AppContainer>\r\n        </LoadingOverlay>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggingIn: state.auth.isLoggingIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setHubConnection\r\n})(App);\r\n","// hub calls\r\n\r\nexport const quizrHubDevelopmentUrl = \"https://localhost:44328/quizrhub\";\r\nexport const quizrHubProductionUrl = \"https://quizr-api.herokuapp.com/quizrhub\";\r\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from './types';\r\n\r\nexport const setUsersOnline = (usersOnline) => {\r\n  return {\r\n    type: SET_USERS_ONLINE,\r\n    payload: usersOnline\r\n  }\r\n}\r\n\r\nexport const setHubConnection = (hubConnection) => {\r\n  return {\r\n    type: SET_HUB_CONNECTION,\r\n    payload: hubConnection\r\n  }\r\n}\r\n\r\nexport const setIsHubConnectionLoading = (isHubConnectionLoading) => {\r\n  return {\r\n    type: SET_IS_HUB_CONNECTION_LOADING,\r\n    payload: isHubConnectionLoading\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport * as serviceWorker from './helpers/serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}