{"version":3,"sources":["redux/reducers/AuthReducer.js","redux/reducers/ServerReducer.js","redux/reducers/QuizRoomReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store/index.js","redux/actions/QuizRoomActions.js","global/styles/theme.js","routing/ProtectedRoute.js","pages/Home/style.js","global/components/AppHeader.js","global/components/Timer.js","global/components/UsersOnline.js","pages/Home/HomePage.js","redux/actions/AuthActions.js","pages/JoinQuiz/style.js","pages/JoinQuiz/JoinQuizPage.js","pages/QuizLobby/style.js","pages/QuizLobby/QuizLobbyPage.js","pages/Prequestion/style.js","pages/Prequestion/PrequestionPage.js","pages/Question/style.js","pages/Question/components/Answer.js","pages/Question/QuestionPage.js","pages/PostQuestion/PostQuestionPage.js","routing/QuizRoute.js","pages/Results/style.js","pages/Results/components/ResultCard.js","pages/Results/ResultsPage.js","routing/Router.js","routing/QuizResultsRoute.js","routing/index.js","App.js","api/hub/index.js","redux/actions/ServerActions.js","helpers/serviceWorker.js","index.js"],"names":["INITIAL_STATE","authToken","user","isLoggedIn","isLoggingIn","hubConnection","usersOnline","isHubConnectionLoading","isAddingUserToQuizRoom","quizRoom","roomTime","quizPhase","results","currentQuestion","text","answers","currentQuestionResult","isAnswerCorrect","correctAnswer","answer","currentScore","combineReducers","auth","state","action","type","payload","server","middleware","ReduxThunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","setQuizRoom","setQuizResults","theme","createMuiTheme","palette","typography","fontFamily","responsiveFontSizes","ProtectedRoute","connect","props","component","other","to","HomePageContainer","styled","div","AuthFormTextContainer","AuthForm","form","Header","Footer","Divider","AppHeader","AppBar","position","color","Toolbar","HeaderText","variant","buttons","Button","defaultProps","Typography","TimerContainer","Timer","time","UsersOnlineContainer","UsersOnline","usersCount","minUsernameInputTextLength","Home","usernameInputText","submitAuthenticationFormDisable","submitAuthenticationFormError","handleUsernameInputTextChange","e","setState","target","value","validateFormFields","renderConnectButton","endIcon","Person","disabled","onClick","handleSubmitAuthenticationForm","length","preventDefault","history","push","joinquizRoutePath","setIsLoggingIn","connection","invoke","then","console","info","setIsLoggedIn","setUser","catch","err","log","toString","onSubmit","this","TextField","id","label","onChange","error","helperText","Component","HomePage","JoinQuizContainer","Content","JoinQuizForm","minRoomNumberInputTextLength","JoinQuiz","roomNumberInputText","submitJoinQuizFormDisable","submitJoinQuizFormError","handleRoomNumberInputTextChange","handleSubmitJoinQuizForm","setIsAddingUserToQuizRoom","name","room","quizRoutePath","renderFormInputsOrReturnToQuizButton","style","fontSize","JoinQuizPage","withRouter","QuizLobbyContainer","alignItems","justifyContent","flexDirection","QuizLobby","quizRoomUsersOnline","QuizLobbyPage","PrequestionPageContainer","PrequestionPageComponent","currentQuestionIndex","questionCount","display","flex","flexdirection","questionTime","PrequestionPage","QuestionPageContainer","AnswersContainer","AnswersRow","AnswerText","paddingRight","paddingLeft","textAlign","children","AnswerHeader","height","paddingTop","AnswerCard","Card","Answer","opacity","noStyleChangesOnDisabled","backgroundColor","correct","green","incorrect","red","undefined","CardActionArea","disableRipple","QuestionPageComponent","disableAnswers","_handleAnswerClick","answerIndex","_disableAllQuestionsExcept","questionResult","setCurrentQuestionResult","exceptQuestionIndex","disabledAnswersCopy","i","bind","QuestionPage","PostQuestionPageComponent","disableStyles","answerCorrect","answerIncorrect","renderCorrect","paddingBottom","marginTop","renderIncorrect","determineCorrectOrIncorrect","determineAnswerStyles","PostQuestionPage","QuizRoute","quizResults","quizResultsPath","renderQuizPhaseOrRedirect","ResultsPageContainer","ResultCardsContainer","ResultPaper","Paper","ResultCard","place","userName","score","Results","_renderResultCards","topThreeUsers","Fragment","onTakeAnotherQuizButtonClick","ResultsPage","Router","basename","exact","path","QuizResultsRoute","_renderLoadingOverlay","active","spinner","fadeSpeed","styles","base","stroke","primary","content","overlay","zIndex","width","AppContainer","App","errorLoadingHubConnection","setIsHubConnectionLoading","loading","determineLoadingOverlayText","signalR","withUrl","WebSockets","withAutomaticReconnect","build","onreconnecting","onreconnected","start","setHubConnection","on","setQuizRoomTime","phase","setQuizRoomPhase","userCount","setQuizRoomUsersOnline","question","setCurrentQuestion","ThemeProvider","CssBaseline","users","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5638505d.chunk.js","sourcesContent":["import { SET_AUTH_TOKEN, SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  authToken: '',\n  user: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_AUTH_TOKEN:\n      return { ...state, authToken: action.payload }\n    case SET_USER:\n      return { ...state, user: action.payload }\n    case SET_IS_LOGGED_IN:\n      return { ...state, isLoggedIn: action.payload }\n    case SET_IS_LOGGING_IN:\n      return { ...state, isLoggingIn: action.payload }\n    default:\n      return state;\n  }\n}\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  hubConnection: null,\n  usersOnline: null, // How many users are online\n  isHubConnectionLoading: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_HUB_CONNECTION:\n      return { ...state, hubConnection: action.payload }\n    case SET_USERS_ONLINE:\n      return { ...state, usersOnline: action.payload }\n    case SET_IS_HUB_CONNECTION_LOADING:\n      return { ...state, isHubConnectionLoading: action.payload }\n    default:\n      return state;\n  }\n}\n        ","import { SET_QUIZ_ROOM, SET_IS_ADDING_USER_TO_QUIZ_ROOM, SET_QUIZ_ROOM_TIME, SET_QUIZ_ROOM_PHASE, SET_QUIZ_RESULTS, SET_QUIZ_ROOM_USERS_ONLINE, SET_CURRENT_QUESTION, SET_CURRENT_QUESTION_RESULT } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isAddingUserToQuizRoom: false,\n  quizRoom: null,\n  roomTime: 0,\n  quizPhase: 'lobby',\n  results: null,\n  usersOnline: 0,\n  currentQuestion: {\n    text: 'testing text',\n    answers: [\n      'test answer 1',\n      'test answer 2',\n      'test answer 3',\n      'test answer 4'\n    ]\n  },\n  // Result given back from server upon answering question\n  currentQuestionResult: {\n    isAnswerCorrect: false,\n    correctAnswer: 1,\n    answer: 2,\n    currentScore: -1\n  }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_QUIZ_ROOM:\n      return { ...state, quizRoom: action.payload };\n    case SET_IS_ADDING_USER_TO_QUIZ_ROOM:\n      return { ...state, isAddingUserToQuizRoom: action.payload }\n    case SET_QUIZ_ROOM_TIME:\n      return { ...state, roomTime: action.payload }\n    case SET_QUIZ_ROOM_PHASE:\n      return { ...state, quizPhase: action.payload }\n    case SET_QUIZ_RESULTS:\n      return { ...state, results: action.payload }\n    case SET_QUIZ_ROOM_USERS_ONLINE:\n      return { ...state, usersOnline: action.payload }\n    case SET_CURRENT_QUESTION:\n      return { ...state, currentQuestion: action.payload }\n    case SET_CURRENT_QUESTION_RESULT:\n      return { ...state, currentQuestionResult: action.payload }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport AuthReducer from './AuthReducer';\nimport ServerReducer from './ServerReducer';\nimport QuizRoomReducer from './QuizRoomReducer';\n\nexport default combineReducers({\n  auth: AuthReducer,\n  server: ServerReducer,\n  quizRoom: QuizRoomReducer\n})\n","// Auth types\nexport const SET_AUTH_TOKEN = 'AUTH/SET_AUTH_TOKEN';\nexport const SET_USER = 'AUTH/SET_USER';\nexport const SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN';\nexport const SET_IS_LOGGING_IN = 'AUTH/SET_IS_LOGGING_IN';\n\n// Server types\nexport const SET_USERS_ONLINE = 'SERVER/USERS_ONLINE';\nexport const SET_HUB_CONNECTION = 'SERVER/SET_HUBCONNECTION';\nexport const SET_IS_HUB_CONNECTION_LOADING = 'SERVER/IS_HUB_CONNECTION_LOADING';\n\n// QuizRoom types\nexport const SET_QUIZ_ROOM = \"QUIZ_ROOM/SET_QUIZ_ROOM\";\nexport const SET_IS_ADDING_USER_TO_QUIZ_ROOM = \"QUIZ_ROOM/SET_IS_ADDING_USER_TO_QUIZ_ROOM\";\nexport const SET_QUIZ_ROOM_TIME = \"QUIZ_ROOM/SET_QUIZ_ROOM_TIME\";\nexport const SET_QUIZ_ROOM_PHASE = \"QUIZ_ROOM/SET_QUIZ_ROOM_PHASE\";\nexport const SET_QUIZ_RESULTS = \"QUIZ_ROOM/SET_QUIZ_RESULTS\";\nexport const SET_QUIZ_ROOM_USERS_ONLINE = \"QUIZ_ROOM/SET_QUIZ_ROOM_USERS_ONLINE\";\nexport const SET_CURRENT_QUESTION = \"QUIZ_ROOM/SET_CURRENT_QUESTION\";\nexport const SET_CURRENT_QUESTION_RESULT = \"QUIZ_ROOM/SET_CURRENT_QUESTION_RESULT\";","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport ReduxThunk from 'redux-thunk';\n\nlet middleware = [ReduxThunk];\n\nconst store = createStore(reducer, {}, composeWithDevTools(\n  applyMiddleware(...middleware),\n));\n\nexport default store;\n","import { SET_QUIZ_ROOM, SET_IS_ADDING_USER_TO_QUIZ_ROOM, SET_QUIZ_ROOM_TIME, SET_QUIZ_ROOM_PHASE, SET_QUIZ_RESULTS, SET_QUIZ_ROOM_USERS_ONLINE, SET_CURRENT_QUESTION, SET_CURRENT_QUESTION_RESULT } from './types';\n\nexport const setQuizRoom = (quizRoom) => {\n  return {\n    type: SET_QUIZ_ROOM,\n    payload: quizRoom\n  }\n}\n\nexport const setIsAddingUserToQuizRoom = (isAddingUserToQuizRoom) => {\n  return {\n    type: SET_IS_ADDING_USER_TO_QUIZ_ROOM,\n    payload: isAddingUserToQuizRoom\n  }\n}\n\nexport const setQuizRoomTime = (time) => {\n  return {\n    type: SET_QUIZ_ROOM_TIME,\n    payload: time\n  }\n}\n\nexport const setQuizRoomPhase = (phase) => {\n  return {\n    type: SET_QUIZ_ROOM_PHASE,\n    payload: phase\n  }\n}\n\nexport const setQuizResults = (results) => {\n  return {\n    type: SET_QUIZ_RESULTS,\n    payload: results\n  }\n}\n\nexport const setQuizRoomUsersOnline = (users) => {\n  return {\n    type: SET_QUIZ_ROOM_USERS_ONLINE,\n    payload: users\n  }\n}\n\nexport const setCurrentQuestion = (question) => {\n  return {\n    type: SET_CURRENT_QUESTION,\n    payload: question\n  }\n}\n\nexport const setCurrentQuestionResult = (currentQuestionResult) => {\n  return {\n    type: SET_CURRENT_QUESTION_RESULT,\n    payload: currentQuestionResult\n  }\n}","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    fontFamily: \"'Varela Round', sans-serif\"\n  }\n})\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst ProtectedRouteComponent = (props) => {\n\n  const renderPageOrRedirect = () => {\n    if (props.isLoggedIn) {\n      return <props.component />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  const { component, ...other } = props;\n\n  return (\n    <Route {...other}>\n      {renderPageOrRedirect()}\n    </Route>\n  )\n}\n\nconst mapStateStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn\n  }\n}\n\nconst ProtectedRoute = connect(mapStateStateToProps)(ProtectedRouteComponent)\n\nexport { ProtectedRoute };\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const AuthFormTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  // padding-bottom: 1rem;\n\n  // @media (max-width: 768px) {\n  //   flex-direction: column;\n  // }\n`;\n\nexport const AuthForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\n\n\n\nconst AppHeader = (props) => {\n  return (\n    <AppBar position=\"static\" color='primary'>\n      <Toolbar>\n        <HeaderText variant=\"h4\">Quizr</HeaderText>\n        { props.buttons && <Button color=\"inherit\">Create Quiz</Button>}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nAppHeader.defaultProps = {\n  buttons: true\n}\n\n// styles\nconst HeaderText = styled(Typography)`\n  flex: 1;\n`;\n\nexport { AppHeader };","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Timer = (props) => {\n  return (\n    <TimerContainer>\n      <Typography variant=\"h4\" color=\"textSecondary\">\n        {props.time}\n      </Typography>\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Time\n      </Typography>\n    </TimerContainer>\n  )\n}\n\nexport { Timer };","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst UsersOnlineContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst UsersOnline = (props) => {\n  return (\n    <UsersOnlineContainer>\n      <Typography variant=\"h4\" color=\"textSecondary\">\n        {props.usersCount}\n      </Typography>\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Users Online\n      </Typography>\n    </UsersOnlineContainer>\n  )\n}\n\nexport { UsersOnline };\n","import React, { Component, Fragment } from 'react';\nimport { Person } from '@material-ui/icons';\nimport {\n  TextField,\n  Button,\n  // LinearProgress\n} from '@material-ui/core';\nimport {\n  HomePageContainer,\n  AuthFormTextContainer,\n  AuthForm,\n  Header,\n  Footer,\n  Divider\n} from './style';\nimport {\n  AppHeader\n} from '../../global/components';\nimport { connect } from 'react-redux';\nimport { setIsLoggedIn, setUser, setIsLoggingIn } from '../../redux/actions/AuthActions';\nimport { joinquizRoutePath } from '../../routing';\n\nconst minUsernameInputTextLength = 1;\n\nclass Home extends Component {\n  state = {\n    usernameInputText: '',\n    submitAuthenticationFormDisable: true,\n    submitAuthenticationFormError: false\n  }\n\n  handleUsernameInputTextChange = (e) => {\n    this.setState({ usernameInputText: e.target.value }, () => {\n      this.validateFormFields();\n    })\n  }\n\n  renderConnectButton = () => {\n    const { isLoggedIn } = this.props;\n    return (\n      <Button\n        variant='contained'\n        color='primary'\n        endIcon={<Person />}\n        disabled={isLoggedIn ? false : this.state.submitAuthenticationFormDisable}\n        onClick={this.handleSubmitAuthenticationForm}\n        type=\"submit\"\n      >\n        {this.props.isLoggedIn ? \"Reconnect\" : \"Login\"}\n      </Button>\n    )\n  }\n\n  validateFormFields = () => {\n    if (this.state.usernameInputText.length >= minUsernameInputTextLength) {\n      this.setState({ submitAuthenticationFormDisable: false });\n    } else {\n      this.setState({ submitAuthenticationFormDisable: true });\n    }\n  }\n\n  handleSubmitAuthenticationForm = (e) => {\n    e.preventDefault();\n\n    // If logged in just navigate user to join quiz page\n    if (this.props.isLoggedIn) {\n      this.props.history.push(joinquizRoutePath);\n      return;\n    }\n\n    this.props.setIsLoggingIn(true);\n    // Login\n    this.props.connection.invoke(\"Login\", this.state.usernameInputText)\n      .then(user => {\n        this.setState({ submitAuthenticationFormError: false })\n        this.props.setIsLoggingIn(false);\n        console.info(`Logged in as user ${user}`);\n        this.props.setIsLoggedIn(true);\n        this.props.setUser(user);\n        this.props.history.push(joinquizRoutePath);\n      })\n      .catch(err => {\n        this.props.setIsLoggingIn(false);\n        console.log(err.toString())\n        this.setState({ submitAuthenticationFormError: true })\n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppHeader />\n        {/* <LinearProgress/> */}\n        <HomePageContainer>\n          <Header>\n            {/* Welcome back,\n            jcancellier! */}\n          </Header>\n          <AuthForm onSubmit={this.handleSubmitAuthenticationForm}>\n            <AuthFormTextContainer>\n              {!this.props.isLoggedIn && <TextField\n                id='username-input'\n                label='Username'\n                value={this.state.usernameInputText}\n                onChange={e => this.handleUsernameInputTextChange(e)}\n                variant='outlined'\n                error={this.state.submitAuthenticationFormError}\n                helperText={this.state.submitAuthenticationFormError ? 'Username already being used' : null}\n              />}\n              <Divider />\n              {this.renderConnectButton()}\n            </AuthFormTextContainer>\n          </AuthForm>\n          <Footer />\n        </HomePageContainer>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    connection: state.server.hubConnection,\n    isLoggedIn: state.auth.isLoggedIn\n  }\n}\n\nconst HomePage = connect(mapStateToProps, {\n  setIsLoggedIn,\n  setUser,\n  setIsLoggingIn\n})(Home);\n\nexport {\n  HomePage\n};\n","import { SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from './types';\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user\n  }\n}\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n  return {\n    type: SET_IS_LOGGED_IN,\n    payload: isLoggedIn\n  }\n}\n\nexport const setIsLoggingIn = (isLoggingIn) => {\n  return {\n    type: SET_IS_LOGGING_IN,\n    payload: isLoggingIn\n  }\n}","import styled from 'styled-components';\n\nexport const JoinQuizContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;\n\nexport const JoinQuizForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;\n  justify-content: center; */\n`;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setQuizRoom, setIsAddingUserToQuizRoom, setQuizResults } from '../../redux/actions/QuizRoomActions';\nimport { AppHeader } from '../../global/components';\nimport { JoinQuizContainer, Header, Content, Footer, Divider, JoinQuizForm } from './style';\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { quizRoutePath } from '../../routing';\n\nconst minRoomNumberInputTextLength = 5;\n\nclass JoinQuiz extends Component {\n  state = {\n    roomNumberInputText: '',\n    submitJoinQuizFormDisable: true,\n    submitJoinQuizFormError: false\n  }\n\n  handleRoomNumberInputTextChange = (e) => {\n    this.setState({ roomNumberInputText: e.target.value }, () => {\n      this.validateFormFields();\n    })\n  }\n\n  validateFormFields = () => {\n    if (this.state.roomNumberInputText.length >= minRoomNumberInputTextLength) {\n      this.setState({ submitJoinQuizFormDisable: false });\n    } else {\n      this.setState({ submitJoinQuizFormDisable: true });\n    }\n  }\n\n  handleSubmitJoinQuizForm = (e) => {\n    e.preventDefault();\n\n    const { connection, user } = this.props;\n\n    // connect to group\n    this.props.setIsAddingUserToQuizRoom(true);\n    connection.invoke(\"AddUserToRoom\", user.name, this.state.roomNumberInputText)\n      .then((room) => {\n        this.props.setIsAddingUserToQuizRoom(false);\n        this.props.setQuizRoom(room)\n        this.setState({ submitJoinQuizFormError: false }, () => {\n          this.props.history.push(quizRoutePath);\n          this.props.setQuizResults(null);\n        })\n      })\n      .catch((err) => {\n        this.props.setIsAddingUserToQuizRoom(false);\n        this.setState({ submitJoinQuizFormError: true })\n      });\n  }\n\n  renderFormInputsOrReturnToQuizButton = () => {\n    if (this.props.quizRoom == null) {\n      return (\n        <Fragment>\n          <TextField\n            id='room-number-input'\n            label='Room #'\n            value={this.state.roomNumberInputText}\n            onChange={e => this.handleRoomNumberInputTextChange(e)}\n            variant='outlined'\n            error={this.state.submitJoinQuizFormError}\n            helperText={this.state.submitJoinQuizFormError ? 'Unable to join room' : null}\n          />\n          <Divider />\n          <Button\n            variant='contained'\n            color='primary'\n            endIcon={null}\n            disabled={this.state.submitJoinQuizFormDisable}\n            onClick={this.handleSubmitJoinQuizForm}\n            type=\"submit\"\n          >\n            Join Room\n          </Button>\n        </Fragment>\n      )\n    }\n    else {\n      return (\n        <Button\n          variant='contained'\n          color='primary'\n          endIcon={null}\n          onClick={(e) => { \n            e.preventDefault();\n            this.props.history.push(quizRoutePath) \n          }}\n          type=\"submit\"\n        >\n          Rejoin Quiz\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppHeader buttons={false} />\n        <JoinQuizContainer>\n          <Header>\n            <Typography variant={'h4'} style={{ fontSize: 'calc(16px + 3vw)' }}>Welcome <strong><em>{this.props.user.name}</em></strong></Typography>\n            {\n              !this.props.quizRoom &&\n              <Typography variant={'body1'} style={{ fontSize: 'calc(12px + 0.5vw)' }}>Enter a room # below to get started</Typography>\n            }\n          </Header>\n\n          <Content>\n            <JoinQuizForm>\n              {this.renderFormInputsOrReturnToQuizButton()}\n            </JoinQuizForm>\n          </Content>\n\n          <Footer>\n\n          </Footer>\n        </JoinQuizContainer>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    connection: state.server.hubConnection,\n    quizRoom: state.quizRoom.quizRoom\n  }\n}\n\nconst JoinQuizPage = withRouter(\n  connect(mapStateToProps, {\n    setQuizRoom,\n    setIsAddingUserToQuizRoom,\n    setQuizResults\n  })(JoinQuiz)\n)\n\nexport { JoinQuizPage };\n","import styled from 'styled-components';\n\nexport const QuizLobbyContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: ${props => props.flexDirection ? props.flexDirection : 'row'};\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport { QuizLobbyContainer, Header, Content, Footer} from './style';\n\nclass QuizLobby extends Component {\n  render() {\n    return (\n      <QuizLobbyContainer>\n        <Header>\n          <Content>\n            <Typography variant={'h2'}>Preparing quiz</Typography>\n          </Content>\n        </Header>\n\n        <Content>\n          <Content>\n            <Typography variant={'h1'}>{this.props.roomTime}</Typography>\n          </Content>\n        </Content>\n\n        <Footer flexDirection={'column'}>\n          <Content/>\n          <Content>\n            <Typography variant={'h6'}>Online Users: {this.props.quizRoomUsersOnline}</Typography>\n          </Content>\n        </Footer>\n      </QuizLobbyContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roomTime: state.quizRoom.roomTime,\n    quizRoomUsersOnline: state.quizRoom.usersOnline\n  }\n}\n\nconst QuizLobbyPage = connect(mapStateToProps, {\n\n})(QuizLobby)\n\nexport { QuizLobbyPage }","import styled from 'styled-components';\n\nexport const PrequestionPageContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  padding: 15rem;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 2rem;\n  align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: ${props => props.flexDirection ? props.flexDirection : 'row'};\n`;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Content, Header, PrequestionPageContainer, Footer } from './style';\nimport { Typography } from '@material-ui/core';\nimport { Timer } from '../../global/components';\n\n\nclass PrequestionPageComponent extends Component {\n  render() {\n    return (\n      <PrequestionPageContainer>\n        <Header>\n          <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + .8vw)' }}>\n            Question {this.props.currentQuestion.currentQuestionIndex} of {this.props.currentQuestion.questionCount}\n          </Typography>\n          <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + 2vw)' }}>\n          {this.props.currentQuestion.text}      \n          </Typography>\n        </Header>\n\n        <Content>\n          <div style={{display: 'flex', flex: 1, justifyContent: 'flex-start', flexdirection: 'column'}}>\n            <Timer time={this.props.questionTime} />\n          </div>\n        </Content>\n          \n        <Footer>     \n        </Footer>\n      </PrequestionPageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    questionTime: state.quizRoom.roomTime,\n    currentQuestion: state.quizRoom.currentQuestion\n  }\n}\n\nconst PrequestionPage = connect(mapStateToProps)(PrequestionPageComponent);\n\nexport { PrequestionPage };","import React from 'react';\nimport styled from 'styled-components';\nimport { Typography } from '@material-ui/core';\n\nexport const QuestionPageContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  padding: 2rem;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 2rem;\n  align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\n  flex-direction: ${props => props.flexDirection ? props.flexDirection : 'row'}\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: ${props => props.flexDirection ? props.flexDirection : 'row'};\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;\n\nexport const AnswersContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const AnswersRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n`;\n\nexport const AnswerText = (props) => {\n  return (\n    <div style={{ display: 'flex', flex: 5, alignItems: 'center', justifyContent: 'center', paddingRight: '0.5rem', paddingLeft: '0.5rem' }}>\n      <Typography style={{ fontSize: 'calc(12px + 1vw)', textAlign: 'center' }}>\n        {props.children}\n      </Typography>\n    </div>\n  )\n}\n\nexport const AnswerHeader = (props) => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%', alignItems: 'flex-start', paddingTop: '0.5rem', paddingLeft: '10px' }}>\n      <Typography>\n        {props.children}\n      </Typography>\n    </div>\n  )\n}","import React from 'react';\nimport { CardActionArea, Card } from \"@material-ui/core\";\nimport styled from 'styled-components';\nimport { green, red } from '@material-ui/core/colors';\n\n\nconst AnswerCard = styled(Card)`\n  display: flex;\n  flex: 1;\n  /* padding: 0.5rem; */\n  margin: 0.5rem;\n  /* padding: 0 1rem; */\n  /* padding-top: 1rem; */\n`;\n\nexport const Answer = (props) => {\n  \n  return (\n    <AnswerCard style={{opacity: props.disabled && !props.noStyleChangesOnDisabled ? 0.4 : 1.0, backgroundColor: props.correct ? green[400] : (props.incorrect ? red[400] : undefined)}}>\n      <CardActionArea onClick={props.onClick} style={{ display: \"flex\", flex: 1 }} disabled={props.disabled} disableRipple>\n        {props.children}\n      </CardActionArea>\n    </AnswerCard>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Content, Header, QuestionPageContainer, Footer, AnswersRow, AnswersContainer, AnswerText, AnswerHeader } from './style';\nimport { Typography } from '@material-ui/core';\nimport { Answer } from './components/Answer';\nimport { Timer, UsersOnline } from '../../global/components';\nimport { setCurrentQuestionResult } from '../../redux/actions/QuizRoomActions';\n\nclass QuestionPageComponent extends Component {\n\n  state = {\n    // bool array where each entry represents each answer's `disabled` attribute\n    disableAnswers: [\n      true,\n      true,\n      true,\n      true\n    ],\n    disabled: false\n  }\n\n  componentDidMount() {\n    // As soon as question loads set default currentQuestion result in the case where user does not answer the question\n    this.props.setCurrentQuestionResult({\n      isAnswerCorrect: null,\n      correctAnswer: -1,\n      answer: -1,\n      currentScore: this.props.currentQuestionResult.currentScore !== -1 ? this.props.currentQuestionResult.currentScore : 0\n    })\n  }\n\n  _handleAnswerClick = (answerIndex) => {\n    // Disable question clicks\n    this._disableAllQuestionsExcept(answerIndex);\n\n    // Send Answer to server\n    this.props.connection.invoke('AnswerQuestion', answerIndex, this.props.room.id)\n      .then((questionResult) => {\n        this.props.setCurrentQuestionResult(questionResult);\n      })\n      .catch((err) => {\n        console.error('error answering question');\n      })\n  }\n\n  _disableAllQuestionsExcept = (exceptQuestionIndex) => {\n    this.setState({ disabled: true })\n    let disabledAnswersCopy = this.state.disableAnswers;\n    for (let i = 0; i < 4; i++) {\n      if (i === exceptQuestionIndex) {\n        continue;\n      }\n      disabledAnswersCopy[i] = false;\n    }\n    this.setState({disableAnswers: [...disabledAnswersCopy]})\n  }\n\n  render() {\n    return (\n      <QuestionPageContainer>\n        <Header>\n          <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + 2.5vw)' }}>\n            {this.props.currentQuestion.text}\n          </Typography>\n        </Header>\n        <Content>\n          <div style={{display: 'flex', flex: 1, justifyContent: 'flex-start', flexdirection: 'column'}}>\n            <Timer time={this.props.roomTime} />\n          </div>\n          <div style={{display: 'flex', flex: 1, justifyContent: 'flex-end', flexdirection: 'column'}}>\n            <UsersOnline usersCount={this.props.quizRoomUsersOnline}/>\n          </div>\n        </Content>\n\n        <Footer>\n          <AnswersContainer>\n            <AnswersRow>\n              <Answer onClick={this._handleAnswerClick.bind(this, 0)} disabled={this.state.disabled} noStyleChangesOnDisabled={this.state.disableAnswers[0]}>\n                <AnswerHeader>\n                  A\n                </AnswerHeader>\n                <AnswerText>\n                  {this.props.currentQuestion.answers[0]}\n                </AnswerText>\n              </Answer>\n              <Answer onClick={this._handleAnswerClick.bind(this, 1)} disabled={this.state.disabled} noStyleChangesOnDisabled={this.state.disableAnswers[1]}>\n                <AnswerHeader>\n                  B\n                </AnswerHeader>\n                <AnswerText>\n                {this.props.currentQuestion.answers[1]}\n                </AnswerText>\n              </Answer>\n            </AnswersRow>\n            <AnswersRow>\n              <Answer onClick={this._handleAnswerClick.bind(this, 2)} disabled={this.state.disabled} noStyleChangesOnDisabled={this.state.disableAnswers[2]}>\n                <AnswerHeader>\n                  C\n                </AnswerHeader>\n                <AnswerText>\n                {this.props.currentQuestion.answers[2]}\n                </AnswerText>\n              </Answer>\n              <Answer onClick={this._handleAnswerClick.bind(this, 3)} disabled={this.state.disabled} noStyleChangesOnDisabled={this.state.disableAnswers[3]}>\n                <AnswerHeader>\n                  D\n                </AnswerHeader>\n                <AnswerText>\n                {this.props.currentQuestion.answers[3]}\n                </AnswerText>\n              </Answer>\n            </AnswersRow>\n          </AnswersContainer>\n        </Footer>\n      </QuestionPageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quizRoomUsersOnline: state.quizRoom.usersOnline,\n    roomTime: state.quizRoom.roomTime,\n    currentQuestion: state.quizRoom.currentQuestion,\n    connection: state.server.hubConnection,\n    room: state.quizRoom.quizRoom,\n    currentQuestionResult: state.quizRoom.currentQuestionResult,\n  }\n}\n\nconst QuestionPage = connect(mapStateToProps, {\n  setCurrentQuestionResult\n})(QuestionPageComponent);\n\nexport { QuestionPage };","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied'\nimport { Answer } from '../Question/components/Answer';\nimport { Content, Header, QuestionPageContainer, Footer, AnswersRow, AnswersContainer, AnswerText, AnswerHeader } from '../Question/style';\nimport { green, red } from '@material-ui/core/colors'\n\nclass PostQuestionPageComponent extends Component {\n\n  state = {\n    disableStyles: [\n      true,\n      true,\n      true,\n      true\n    ],\n    answerCorrect: [\n      false,\n      false,\n      false,\n      false\n    ],\n    answerIncorrect: [\n      false,\n      false,\n      false,\n      false\n    ]\n  }\n\n  componentDidMount() {\n    if (this.props.currentQuestionResult.isAnswerCorrect !== null)\n      this.determineAnswerStyles();\n  }\n\n  componentWillUnmount() {\n    // TODO: clear currentQuestionResult\n  }\n\n  determineAnswerStyles() {\n    const { currentQuestionResult } = this.props;\n    const { disableStyles, answerCorrect, answerIncorrect } = this.state\n\n    // If answer was correct then disable all other questions\n    if (currentQuestionResult.isAnswerCorrect) {\n      answerCorrect[currentQuestionResult.correctAnswer] = true;\n      for (let i = 0; i < 4; i++) {\n        if (i === currentQuestionResult.answer) {\n          continue;\n        }\n        disableStyles[i] = false;\n      }\n    }\n\n    // If answer was incorrect then disable everything except selected answer and correct answer\n    if (!currentQuestionResult.isAnswerCorrect) {\n      answerCorrect[currentQuestionResult.correctAnswer] = true;\n      answerIncorrect[currentQuestionResult.answer] = true;\n      for (let i = 0; i < 4; i++) {\n        if (i === currentQuestionResult.answer || i === currentQuestionResult.correctAnswer) {\n          continue;\n        }\n        disableStyles[i] = false;\n      }\n    }\n\n    this.setState({ disableStyles: [...disableStyles] });\n    this.setState({ answerCorrect: [...answerCorrect] });\n    this.setState({ answerIncorrect: [...answerIncorrect] });\n  }\n\n  renderCorrect = () => {\n    return (\n      <Fragment>\n        <CheckIcon style={{ fontSize: 'calc(15px + 8vw)', paddingBottom: '0.5rem', color: green[400] }}/>\n        <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + 1.5vw)', color: green[400] }}>\n          Correct!\n        </Typography>\n        <Typography color=\"primary\"  variant=\"h4\" style={{ fontSize: 'calc(10px + 1.5vw)', marginTop: '0.3rem' }}>\n          Current Score: {this.props.currentQuestionResult.currentScore}\n        </Typography>\n      </Fragment>\n    )\n  }\n\n  renderIncorrect = () => {\n    return (\n      <Fragment>\n        <SentimentVeryDissatisfiedIcon style={{ fontSize: 'calc(15px + 4vw)', paddingBottom: '0.5rem', color: red[400] }}/>\n        <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + 1.5vw)', color: red[400] }}>\n          {this.props.isAnswerCorrect === null ? 'Question not answered' : 'Incorrect'}\n        </Typography>\n        <Typography color=\"primary\"  variant=\"h4\" style={{ fontSize: 'calc(10px + 1.5vw)', marginTop: '0.3rem' }}>\n          Current Score: {this.props.currentQuestionResult.currentScore}\n        </Typography>\n      </Fragment>\n    )\n  }\n\n  determineCorrectOrIncorrect = (correct = true) => {\n    if (correct) {\n      return this.renderCorrect();\n    }\n    return this.renderIncorrect();\n  }\n\n  render() {\n    return (\n      <QuestionPageContainer>\n        <Header>\n          <Typography variant=\"h4\" style={{ fontSize: 'calc(10px + 2.5vw)' }}>\n            {this.props.currentQuestion.text}\n          </Typography>\n        </Header>\n        <Content flexDirection=\"column\">\n          {this.determineCorrectOrIncorrect(this.props.currentQuestionResult.isAnswerCorrect)}\n\n        </Content>\n\n        <Footer>\n          <AnswersContainer>\n            <AnswersRow>\n              <Answer disabled noStyleChangesOnDisabled={this.state.disableStyles[0]} correct={this.state.answerCorrect[0]} incorrect={this.state.answerIncorrect[0]}>\n                <AnswerHeader>\n                  A\n                </AnswerHeader>\n                <AnswerText>\n                  {this.props.currentQuestion.answers[0]}\n                </AnswerText>\n              </Answer>\n              <Answer disabled noStyleChangesOnDisabled={this.state.disableStyles[1]} correct={this.state.answerCorrect[1]} incorrect={this.state.answerIncorrect[1]}>\n                <AnswerHeader>\n                  B\n                </AnswerHeader>\n                <AnswerText>\n                  {this.props.currentQuestion.answers[1]}\n                </AnswerText>\n              </Answer>\n            </AnswersRow>\n            <AnswersRow>\n              <Answer disabled noStyleChangesOnDisabled={this.state.disableStyles[2]} correct={this.state.answerCorrect[2]} incorrect={this.state.answerIncorrect[2]}>\n                <AnswerHeader>\n                  C\n                </AnswerHeader>\n                <AnswerText>\n                  {this.props.currentQuestion.answers[2]}\n                </AnswerText>\n              </Answer>\n              <Answer disabled noStyleChangesOnDisabled={this.state.disableStyles[3]} correct={this.state.answerCorrect[3]} incorrect={this.state.answerIncorrect[3]}>\n                <AnswerHeader>\n                  D\n                </AnswerHeader>\n                <AnswerText>\n                  {this.props.currentQuestion.answers[3]}\n                </AnswerText>\n              </Answer>\n            </AnswersRow>\n          </AnswersContainer>\n        </Footer>\n      </QuestionPageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentQuestion: state.quizRoom.currentQuestion,\n    currentQuestionResult: state.quizRoom.currentQuestionResult\n  }\n}\n\nconst PostQuestionPage = connect(mapStateToProps)(PostQuestionPageComponent);\n\nexport { PostQuestionPage };","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { QuizLobbyPage } from '../pages';\nimport { joinquizRoutePath, quizResultsPath } from '.';\nimport { PrequestionPage } from '../pages/Prequestion/PrequestionPage';\nimport { QuestionPage } from '../pages/Question/QuestionPage';\nimport { PostQuestionPage } from '../pages/PostQuestion/PostQuestionPage';\n\nconst QuizRouteComponent = (props) => {\n  const renderQuizPhaseOrRedirect = () => {\n    if (!props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    if (!props.quizRoom) {\n      return <Redirect to={joinquizRoutePath} />\n    }\n    switch (props.quizPhase) {\n      case 'lobby':\n        return <QuizLobbyPage />\n      case 'prequestion':\n        return <PrequestionPage />\n      case 'question':\n        return <QuestionPage />\n      case 'postquestion':\n        return <PostQuestionPage />\n      case 'finished':\n        return <Redirect to={quizResultsPath} />\n      default:\n        return <Redirect to=\"/\" />\n    }\n  }\n\n  const { component, ...other } = props;\n\n  return (\n    <Route {...other}>\n      {renderQuizPhaseOrRedirect()}\n    </Route>\n  )\n}\n\nconst mapStateStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    quizRoom: state.quizRoom.quizRoom,\n    quizPhase: state.quizRoom.quizPhase,\n    quizResults: state.quizRoom.results\n  }\n}\n\nconst QuizRoute = connect(mapStateStateToProps)(QuizRouteComponent)\n\nexport { QuizRoute };\n","import styled from 'styled-components';\n\nexport const ResultsPageContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\n`;\n\nexport const ResultCardsContainer = styled.div`\n  display: flex;\n  flex: 1;\n  /* align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'}; */\n  flex-direction: row;\n\n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;\n\nexport const JoinQuizForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;\n  justify-content: center; */\n`;\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core'\nimport styled from 'styled-components';\n\nconst ResultPaper = styled(Paper)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  height: 100%;\n  margin: 1rem;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n`;\n\nconst ResultCard = (props) => {\n  return (\n    <ResultPaper>\n      <Typography variant=\"h3\">{props.place}</Typography>\n      <Typography variant=\"h5\">{props.userName}</Typography>\n      <Typography variant=\"h5\">Score: {props.score}</Typography>\n    </ResultPaper>\n  )\n}\n\nexport default ResultCard;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ResultsPageContainer, Header, Content, Footer, ResultCardsContainer } from './style';\nimport { Typography, Button } from '@material-ui/core';\nimport ResultCard from './components/ResultCard';\nimport { joinquizRoutePath } from '../../routing';\n\nclass Results extends Component {\n\n  _renderResultCards = () => {\n    const { topThreeUsers } = this.props.quizResults;\n    switch (topThreeUsers.length) {\n      case 3:\n        return (\n          <React.Fragment>\n            <ResultCard place=\"1st\" userName={topThreeUsers[0].name} score={topThreeUsers[0].name} />\n            <ResultCard place=\"2nd\" userName={topThreeUsers[1].name} score={topThreeUsers[1].name} />\n            <ResultCard place=\"3rd\" userName={topThreeUsers[2].name} score={topThreeUsers[2].name} />\n          </React.Fragment>\n        )\n      case 2:\n        return (\n          <React.Fragment>\n            <ResultCard place=\"1st\" userName={topThreeUsers[0].name} score={topThreeUsers[0].name} />\n            <ResultCard place=\"2nd\" userName={topThreeUsers[1].name} score={topThreeUsers[1].name} />\n          </React.Fragment>\n        )\n      case 1:\n        return (\n          <ResultCard place=\"1st\" userName={topThreeUsers[0].name} score={topThreeUsers[0].name} />\n        )\n    }\n  }\n\n  onTakeAnotherQuizButtonClick = () => {\n    this.props.history.push(joinquizRoutePath);\n  }\n\n  render() {\n    return (\n      <ResultsPageContainer>\n        <Header>\n          <Content>\n            <Typography variant={'h2'}>Results</Typography>\n          </Content>\n        </Header>\n        <ResultCardsContainer>\n          {this._renderResultCards()}\n        </ResultCardsContainer>\n        <Footer>\n          <Button         \n            variant='contained'\n            color='primary'\n            onClick={this.onTakeAnotherQuizButtonClick}\n          >\n            Take another quiz\n          </Button>\n        </Footer>\n      </ResultsPageContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quizResults: state.quizRoom.results\n  }\n}\n\nconst ResultsPage = connect(mapStateToProps)(Results);\n\nexport { ResultsPage };\n","import React from 'react';\nimport { HomePage, JoinQuizPage } from '../pages';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport { ProtectedRoute, joinquizRoutePath, QuizRoute, QuizResultsRoute, quizRoutePath, quizResultsPath } from '.';\nimport { ResultsPage } from '../pages/Results/ResultsPage';\n\nconst Router = (props) => {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <ProtectedRoute path={joinquizRoutePath} component={JoinQuizPage} />\n        <QuizRoute path={quizRoutePath} />\n        <QuizResultsRoute path={quizResultsPath} component={ResultsPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport { Router };\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ProtectedRoute } from '.';\nimport { connect } from 'react-redux';\nimport theme from '../global/styles/theme';\nimport LoadingOverlay from 'react-loading-overlay';\n\nconst QuizResultsRouteComponent = (props) => {\n  const renderPageOrRedirect = () => {\n    if(!props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n\n    if (!props.quizResults) {\n      return _renderLoadingOverlay();\n    } else {\n      return <ProtectedRoute {...props} />\n    }\n  }\n\n  const _renderLoadingOverlay = () => {\n    return (\n      <LoadingOverlay\n        active={!props.quizResults}\n        spinner={true}\n        fadeSpeed={0}\n        text='Retrieving quiz results'\n        styles={{\n          spinner: (base) => ({\n            ...base,\n            '& svg circle': {\n              stroke: `${theme.palette.primary[theme.palette.type]}`\n            }\n          }),\n          content: (base) => ({\n            ...base,\n            fontFamily: theme.typography.fontFamily\n          }),\n          overlay: (base) => ({\n            ...base,\n            zIndex: 2000,\n            width: '100vw',\n            height: '100vh'\n          })\n        }}\n      />\n    )\n  }\n\n  return (\n    renderPageOrRedirect()\n  )\n}\n\nconst mapStateStateToProps = (state) => {\n  return {\n    quizResults: state.quizRoom.results,\n    isLoggedIn: state.auth.isLoggedIn\n  }\n}\n\nconst QuizResultsRoute = connect(mapStateStateToProps)(QuizResultsRouteComponent)\n\nexport { QuizResultsRoute };\n","export * from './ProtectedRoute';\nexport * from './QuizRoute';\nexport * from './Router';\nexport * from './QuizResultsRoute';\n\nexport const joinquizRoutePath = \"/joinquiz\";\nexport const quizRoutePath = \"/quiz\";\nexport const quizResultsPath = \"/quizresults\";\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setHubConnection } from './redux/actions/ServerActions';\nimport { setQuizRoomTime, setQuizRoomPhase, setQuizRoomUsersOnline, setQuizResults, setQuizRoom, setCurrentQuestion } from './redux/actions/QuizRoomActions';\nimport { quizrHubUrl } from './api/hub';\nimport * as signalR from '@microsoft/signalr';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './global/styles/theme';\nimport styled from 'styled-components';\nimport { Router, quizResultsPath } from './routing';\nimport LoadingOverlay from 'react-loading-overlay';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass App extends Component {\n  state = {\n    isHubConnectionLoading: false,\n    errorLoadingHubConnection: false\n  }\n\n  setIsHubConnectionLoading = (loading) => {\n    this.setState({ isHubConnectionLoading: loading })\n  }\n\n  componentDidMount() {\n    this.setIsHubConnectionLoading(true);\n\n    let connection = new signalR.HubConnectionBuilder()\n      .withUrl(quizrHubUrl, signalR.HttpTransportType.WebSockets)\n      .withAutomaticReconnect()\n      .build();\n\n    connection.onreconnecting(() => { this.setIsHubConnectionLoading(true) })\n    connection.onreconnected(() => { this.setIsHubConnectionLoading(false) })\n    \n    connection.start()\n      .then(() => {\n        this.props.setHubConnection(connection);\n        this.setIsHubConnectionLoading(false);\n      })\n      .catch((err) => {\n        this.setIsHubConnectionLoading(false);\n        this.setState({ errorLoadingHubConnection: true });\n      })\n\n      connection.on('UpdateRoomTimer', (time) => {\n        this.props.setQuizRoomTime(time);\n      });\n\n      connection.on('UpdateRoomPhase', (phase) => {\n          this.props.setQuizRoomPhase(phase);\n      });\n\n      connection.on('UpdateQuizRoomUsers', (userCount) => {\n        this.props.setQuizRoomUsersOnline(userCount);\n      });\n\n      connection.on('ReceiveQuizResults', (quizResults) => {\n        this.props.setQuizResults(quizResults);\n        this.props.setQuizRoom(null);\n        this.props.setQuizRoomPhase('lobby');\n      })\n\n      connection.on('ReceiveNewQuestion', (question) => {\n        this.props.setCurrentQuestion(question);\n      })\n  }\n\n  determineLoadingOverlayText = () => {\n    if (this.state.errorLoadingHubConnection) {\n      return \"Error contacting server. Please refresh page to try again!\"\n    }\n    else if (this.state.isHubConnectionLoading) {\n      return \"\"\n    }\n    else if (this.props.isLoggingIn)\n      return \"Logging in\"\n    else if (this.props.isAddingUserToQuizRoom)\n      return \"Joining Quiz\"\n    else\n      return \"\"\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <LoadingOverlay\n          active={this.state.isHubConnectionLoading || this.props.isLoggingIn || this.state.errorLoadingHubConnection || this.props.isAddingUserToQuizRoom}\n          spinner={!this.state.errorLoadingHubConnection}\n          fadeSpeed={0}\n          text={this.determineLoadingOverlayText()}\n          styles={{\n            spinner: (base) => ({\n              ...base,\n              '& svg circle': {\n                stroke: `${theme.palette.primary[theme.palette.type]}`\n              }\n            }),\n            content: (base) => ({\n              ...base,\n              fontFamily: theme.typography.fontFamily\n            }),\n            overlay: (base) => ({\n              ...base,\n              zIndex: 2000\n            })\n          }}\n        >\n          <CssBaseline />\n          <AppContainer>\n            <Router />\n          </AppContainer>\n        </LoadingOverlay>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    isAddingUserToQuizRoom: state.quizRoom.isAddingUserToQuizRoom\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setHubConnection,\n  setQuizRoomTime,\n  setQuizRoomPhase,\n  setQuizRoomUsersOnline,\n  setQuizResults,\n  setQuizRoom,\n  setCurrentQuestion\n})(App);\n","// hub calls\n\nexport const quizrHubDevelopmentUrl = \"https://localhost:44328/quizrhub\";\nexport const quizrHubProductionUrl = \"https://quizr-api.herokuapp.com/quizrhub\";\nexport const quizrHubDevelopmentMacUrl = \"https://localhost:5001/quizrhub\";\n\nexport const quizrHubUrl = quizrHubDevelopmentMacUrl;\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from './types';\n\nexport const setUsersOnline = (usersOnline) => {\n  return {\n    type: SET_USERS_ONLINE,\n    payload: usersOnline\n  }\n}\n\nexport const setHubConnection = (hubConnection) => {\n  return {\n    type: SET_HUB_CONNECTION,\n    payload: hubConnection\n  }\n}\n\nexport const setIsHubConnectionLoading = (isHubConnectionLoading) => {\n  return {\n    type: SET_IS_HUB_CONNECTION_LOADING,\n    payload: isHubConnectionLoading\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './helpers/serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}