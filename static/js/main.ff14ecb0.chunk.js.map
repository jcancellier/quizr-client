{"version":3,"sources":["redux/reducers/AuthReducer.js","redux/reducers/ServerReducer.js","redux/reducers/QuizRoomReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store/index.js","global/styles/theme.js","routing/ProtectedRoute.js","pages/Home/style.js","global/components/AppHeader.js","pages/Home/HomePage.js","redux/actions/AuthActions.js","pages/JoinQuiz/style.js","pages/JoinQuiz/JoinQuizPage.js","redux/actions/QuizRoomActions.js","pages/QuizLobby/style.js","pages/QuizLobby/QuizLobbyPage.js","routing/QuizRoute.js","routing/Router.js","routing/index.js","App.js","api/hub/index.js","redux/actions/ServerActions.js","helpers/serviceWorker.js","index.js"],"names":["INITIAL_STATE","authToken","user","isLoggedIn","isLoggingIn","hubConnection","usersOnline","isHubConnectionLoading","isAddingUserToQuizRoom","quizRoom","roomTime","combineReducers","auth","state","action","type","payload","server","middleware","ReduxThunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","theme","createMuiTheme","palette","typography","fontFamily","responsiveFontSizes","ProtectedRoute","connect","props","component","other","to","HomePageContainer","styled","div","AuthFormTextContainer","AuthForm","form","Header","Footer","Divider","AppHeader","AppBar","position","color","Toolbar","HeaderText","variant","buttons","Button","defaultProps","Typography","minUsernameInputTextLength","Home","usernameInputText","submitAuthenticationFormDisable","submitAuthenticationFormError","handleUsernameInputTextChange","e","setState","target","value","validateFormFields","renderConnectButton","endIcon","Person","disabled","onClick","handleSubmitAuthenticationForm","length","preventDefault","history","push","joinquizRoutePath","setIsLoggingIn","connection","invoke","then","console","info","setIsLoggedIn","setUser","catch","err","log","toString","onSubmit","this","TextField","id","label","onChange","error","helperText","Component","HomePage","JoinQuizContainer","Content","JoinQuizForm","minRoomNumberInputTextLength","JoinQuiz","roomNumberInputText","submitJoinQuizFormDisable","submitJoinQuizFormError","handleRoomNumberInputTextChange","handleSubmitJoinQuizForm","setIsAddingUserToQuizRoom","name","room","setQuizRoom","quizRoutePath","renderFormInputsOrReturnToQuizButton","style","fontSize","JoinQuizPage","withRouter","QuizLobbyContainer","alignItems","justifyContent","flexDirection","QuizLobby","QuizLobbyPage","QuizRoute","Router","basename","exact","path","AppContainer","App","errorLoadingHubConnection","setIsHubConnectionLoading","loading","determineLoadingOverlayText","signalR","withUrl","WebSockets","withAutomaticReconnect","build","onreconnecting","onreconnected","start","setHubConnection","on","time","setQuizRoomTime","ThemeProvider","active","spinner","fadeSpeed","text","styles","base","stroke","primary","content","overlay","zIndex","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff14ecb0.chunk.js","sourcesContent":["import { SET_AUTH_TOKEN, SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  authToken: '',\n  user: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_AUTH_TOKEN:\n      return { ...state, authToken: action.payload }\n    case SET_USER:\n      return { ...state, user: action.payload }\n    case SET_IS_LOGGED_IN:\n      return { ...state, isLoggedIn: action.payload }\n    case SET_IS_LOGGING_IN:\n      return { ...state, isLoggingIn: action.payload }\n    default:\n      return state;\n  }\n}\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  hubConnection: null,\n  usersOnline: null, // How many users are online\n  isHubConnectionLoading: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_HUB_CONNECTION:\n      return { ...state, hubConnection: action.payload }\n    case SET_USERS_ONLINE:\n      return { ...state, usersOnline: action.payload }\n    case SET_IS_HUB_CONNECTION_LOADING:\n      return { ...state, isHubConnectionLoading: action.payload }\n    default:\n      return state;\n  }\n}\n        ","import { SET_QUIZ_ROOM, SET_IS_ADDING_USER_TO_QUIZ_ROOM, SET_QUIZ_ROOM_TIME } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  isAddingUserToQuizRoom: false,\n  quizRoom: null,\n  roomTime: 0\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_QUIZ_ROOM:\n      return { ...state, quizRoom: action.payload };\n    case SET_IS_ADDING_USER_TO_QUIZ_ROOM:\n      return { ...state, isAddingUserToQuizRoom: action.payload }\n    case SET_QUIZ_ROOM_TIME:\n      return { ...state, roomTime: action.payload }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport AuthReducer from './AuthReducer';\nimport ServerReducer from './ServerReducer';\nimport QuizRoomReducer from './QuizRoomReducer';\n\nexport default combineReducers({\n  auth: AuthReducer,\n  server: ServerReducer,\n  quizRoom: QuizRoomReducer\n})\n","// Auth types\nexport const SET_AUTH_TOKEN = 'AUTH/SET_AUTH_TOKEN';\nexport const SET_USER = 'AUTH/SET_USER';\nexport const SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN';\nexport const SET_IS_LOGGING_IN = 'AUTH/SET_IS_LOGGING_IN';\n\n// Server types\nexport const SET_USERS_ONLINE = 'SERVER/USERS_ONLINE';\nexport const SET_HUB_CONNECTION = 'SERVER/SET_HUBCONNECTION';\nexport const SET_IS_HUB_CONNECTION_LOADING = 'SERVER/IS_HUB_CONNECTION_LOADING';\n\n// QuizRoom types\nexport const SET_QUIZ_ROOM = \"QUIZ_ROOM/SET_QUIZ_ROOM\";\nexport const SET_IS_ADDING_USER_TO_QUIZ_ROOM = \"QUIZ_ROOM/SET_IS_ADDING_USER_TO_QUIZ_ROOM\";\nexport const SET_QUIZ_ROOM_TIME = \"SET_QUIZ_ROOM_TIME\";\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\nimport ReduxThunk from 'redux-thunk';\n\nlet middleware = [ReduxThunk];\n\nconst store = createStore(reducer, {}, composeWithDevTools(\n  applyMiddleware(...middleware),\n));\n\nexport default store;\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: {\n    fontFamily: \"'Varela Round', sans-serif\"\n  }\n})\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst ProtectedRouteComponent = (props) => {\n\n  const renderPageOrRedirect = () => {\n    if (props.isLoggedIn) {\n      return <props.component />\n    } else {\n      return <Redirect to=\"/\" />\n    }\n  }\n\n  const { component, ...other } = props;\n\n  return (\n    <Route {...other}>\n      {renderPageOrRedirect()}\n    </Route>\n  )\n}\n\nconst mapStateStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn\n  }\n}\n\nconst ProtectedRoute = connect(mapStateStateToProps)(ProtectedRouteComponent)\n\nexport { ProtectedRoute };\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const AuthFormTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  // padding-bottom: 1rem;\n\n  // @media (max-width: 768px) {\n  //   flex-direction: column;\n  // }\n`;\n\nexport const AuthForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\n\n\n\nconst AppHeader = (props) => {\n  return (\n    <AppBar position=\"static\" color='primary'>\n      <Toolbar>\n        <HeaderText variant=\"h4\">Quizr</HeaderText>\n        { props.buttons && <Button color=\"inherit\">Create Quiz</Button>}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nAppHeader.defaultProps = {\n  buttons: true\n}\n\n// styles\nconst HeaderText = styled(Typography)`\n  flex: 1;\n`;\n\nexport { AppHeader };","import React, { Component, Fragment } from 'react';\nimport { Person } from '@material-ui/icons';\nimport {\n  TextField,\n  Button,\n  // LinearProgress\n} from '@material-ui/core';\nimport {\n  HomePageContainer,\n  AuthFormTextContainer,\n  AuthForm,\n  Header,\n  Footer,\n  Divider\n} from './style';\nimport {\n  AppHeader\n} from '../../global/components';\nimport { connect } from 'react-redux';\nimport { setIsLoggedIn, setUser, setIsLoggingIn } from '../../redux/actions/AuthActions';\nimport { joinquizRoutePath } from '../../routing';\n\nconst minUsernameInputTextLength = 1;\n\nclass Home extends Component {\n  state = {\n    usernameInputText: '',\n    submitAuthenticationFormDisable: true,\n    submitAuthenticationFormError: false\n  }\n\n  handleUsernameInputTextChange = (e) => {\n    this.setState({ usernameInputText: e.target.value }, () => {\n      this.validateFormFields();\n    })\n  }\n\n  renderConnectButton = () => {\n    const { isLoggedIn } = this.props;\n    return (\n      <Button\n        variant='contained'\n        color='primary'\n        endIcon={<Person />}\n        disabled={isLoggedIn ? false : this.state.submitAuthenticationFormDisable}\n        onClick={this.handleSubmitAuthenticationForm}\n        type=\"submit\"\n      >\n        {this.props.isLoggedIn ? \"Reconnect\" : \"Login\"}\n      </Button>\n    )\n  }\n\n  validateFormFields = () => {\n    if (this.state.usernameInputText.length >= minUsernameInputTextLength) {\n      this.setState({ submitAuthenticationFormDisable: false });\n    } else {\n      this.setState({ submitAuthenticationFormDisable: true });\n    }\n  }\n\n  handleSubmitAuthenticationForm = (e) => {\n    e.preventDefault();\n\n    // If logged in just navigate user to join quiz page\n    if (this.props.isLoggedIn) {\n      this.props.history.push(joinquizRoutePath);\n      return;\n    }\n\n    this.props.setIsLoggingIn(true);\n    // Login\n    this.props.connection.invoke(\"Login\", this.state.usernameInputText)\n      .then(user => {\n        this.setState({ submitAuthenticationFormError: false })\n        this.props.setIsLoggingIn(false);\n        console.info(`Logged in as user ${user}`);\n        this.props.setIsLoggedIn(true);\n        this.props.setUser(user);\n        this.props.history.push(joinquizRoutePath);\n      })\n      .catch(err => {\n        this.props.setIsLoggingIn(false);\n        console.log(err.toString())\n        this.setState({ submitAuthenticationFormError: true })\n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppHeader />\n        {/* <LinearProgress/> */}\n        <HomePageContainer>\n          <Header>\n            {/* Welcome back,\n            jcancellier! */}\n          </Header>\n          <AuthForm onSubmit={this.handleSubmitAuthenticationForm}>\n            <AuthFormTextContainer>\n              {!this.props.isLoggedIn && <TextField\n                id='username-input'\n                label='Username'\n                value={this.state.usernameInputText}\n                onChange={e => this.handleUsernameInputTextChange(e)}\n                variant='outlined'\n                error={this.state.submitAuthenticationFormError}\n                helperText={this.state.submitAuthenticationFormError ? 'Username already being used' : null}\n              />}\n              <Divider />\n              {this.renderConnectButton()}\n            </AuthFormTextContainer>\n          </AuthForm>\n          <Footer />\n        </HomePageContainer>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    connection: state.server.hubConnection,\n    isLoggedIn: state.auth.isLoggedIn\n  }\n}\n\nconst HomePage = connect(mapStateToProps, {\n  setIsLoggedIn,\n  setUser,\n  setIsLoggingIn\n})(Home);\n\nexport {\n  HomePage\n};\n","import { SET_USER, SET_IS_LOGGED_IN, SET_IS_LOGGING_IN } from './types';\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user\n  }\n}\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n  return {\n    type: SET_IS_LOGGED_IN,\n    payload: isLoggedIn\n  }\n}\n\nexport const setIsLoggingIn = (isLoggingIn) => {\n  return {\n    type: SET_IS_LOGGING_IN,\n    payload: isLoggingIn\n  }\n}","import styled from 'styled-components';\n\nexport const JoinQuizContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;\n\nexport const JoinQuizForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;\n  justify-content: center; */\n`;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setQuizRoom, setIsAddingUserToQuizRoom } from '../../redux/actions/QuizRoomActions';\nimport { AppHeader } from '../../global/components';\nimport { JoinQuizContainer, Header, Content, Footer, Divider, JoinQuizForm } from './style';\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { quizRoutePath } from '../../routing';\n\nconst minRoomNumberInputTextLength = 5;\n\nclass JoinQuiz extends Component {\n  state = {\n    roomNumberInputText: '',\n    submitJoinQuizFormDisable: true,\n    submitJoinQuizFormError: false\n  }\n\n  handleRoomNumberInputTextChange = (e) => {\n    this.setState({ roomNumberInputText: e.target.value }, () => {\n      this.validateFormFields();\n    })\n  }\n\n  validateFormFields = () => {\n    if (this.state.roomNumberInputText.length >= minRoomNumberInputTextLength) {\n      this.setState({ submitJoinQuizFormDisable: false });\n    } else {\n      this.setState({ submitJoinQuizFormDisable: true });\n    }\n  }\n\n  handleSubmitJoinQuizForm = (e) => {\n    e.preventDefault();\n\n    const { connection, user } = this.props;\n\n    // connect to group\n    this.props.setIsAddingUserToQuizRoom(true);\n    connection.invoke(\"AddUserToRoom\", user.name, this.state.roomNumberInputText)\n      .then((room) => {\n        this.props.setIsAddingUserToQuizRoom(false);\n        this.props.setQuizRoom(room)\n        this.setState({ submitJoinQuizFormError: false }, () => {\n          this.props.history.push(quizRoutePath);\n        })\n      })\n      .catch((err) => {\n        this.props.setIsAddingUserToQuizRoom(false);\n        this.setState({ submitJoinQuizFormError: true })\n      });\n  }\n\n  renderFormInputsOrReturnToQuizButton = () => {\n    if (this.props.quizRoom == null) {\n      return (\n        <Fragment>\n          <TextField\n            id='room-number-input'\n            label='Room #'\n            value={this.state.roomNumberInputText}\n            onChange={e => this.handleRoomNumberInputTextChange(e)}\n            variant='outlined'\n            error={this.state.submitJoinQuizFormError}\n            helperText={this.state.submitJoinQuizFormError ? 'Unable to join room' : null}\n          />\n          <Divider />\n          <Button\n            variant='contained'\n            color='primary'\n            endIcon={null}\n            disabled={this.state.submitJoinQuizFormDisable}\n            onClick={this.handleSubmitJoinQuizForm}\n            type=\"submit\"\n          >\n            Join Room\n          </Button>\n        </Fragment>\n      )\n    }\n    else {\n      return (\n        <Button\n          variant='contained'\n          color='primary'\n          endIcon={null}\n          onClick={(e) => { \n            e.preventDefault();\n            this.props.history.push(quizRoutePath) \n          }}\n          type=\"submit\"\n        >\n          Rejoin Quiz\n        </Button>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <AppHeader buttons={false} />\n        <JoinQuizContainer>\n          <Header>\n            <Typography variant={'h4'} style={{ fontSize: 'calc(16px + 3vw)' }}>Welcome <strong><em>{this.props.user.name}</em></strong></Typography>\n            {\n              !this.props.quizRoom &&\n              <Typography variant={'body1'} style={{ fontSize: 'calc(12px + 0.5vw)' }}>Enter a room # below to get started</Typography>\n            }\n          </Header>\n\n          <Content>\n            <JoinQuizForm>\n              {this.renderFormInputsOrReturnToQuizButton()}\n            </JoinQuizForm>\n          </Content>\n\n          <Footer>\n\n          </Footer>\n        </JoinQuizContainer>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    connection: state.server.hubConnection,\n    quizRoom: state.quizRoom.quizRoom\n  }\n}\n\nconst JoinQuizPage = withRouter(\n  connect(mapStateToProps, {\n    setQuizRoom,\n    setIsAddingUserToQuizRoom\n  })(JoinQuiz)\n)\n\nexport { JoinQuizPage };\n","import { SET_QUIZ_ROOM, SET_IS_ADDING_USER_TO_QUIZ_ROOM, SET_QUIZ_ROOM_TIME } from './types';\n\nexport const setQuizRoom = (quizRoom) => {\n  return {\n    type: SET_QUIZ_ROOM,\n    payload: quizRoom\n  }\n}\n\nexport const setIsAddingUserToQuizRoom = (isAddingUserToQuizRoom) => {\n  return {\n    type: SET_IS_ADDING_USER_TO_QUIZ_ROOM,\n    payload: isAddingUserToQuizRoom\n  }\n}\n\nexport const setQuizRoomTime = (time) => {\n  return {\n    type: SET_QUIZ_ROOM_TIME,\n    payload: time\n  }\n}","import styled from 'styled-components';\n\nexport const QuizLobbyContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: ${props => props.alignItems ? props.alignItems : 'center'};\n  justify-content: ${props => props.justifyContent ? props.justifyContent : 'center'};\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: ${props => props.flexDirection ? props.flexDirection : 'row'};\n`;\n\nexport const Divider = styled.div`\n  height: 0.7rem;\n`;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport { QuizLobbyContainer, Header, Content, Footer} from './style';\n\nclass QuizLobby extends Component {\n  render() {\n    return (\n      <QuizLobbyContainer>\n        <Header>\n          <Content>\n            <Typography variant={'h2'}>Preparing quiz</Typography>\n          </Content>\n        </Header>\n\n        <Content>\n          <Content>\n            <Typography variant={'h1'}>{this.props.roomTime}</Typography>\n          </Content>\n        </Content>\n\n        <Footer flexDirection={'column'}>\n          <Content/>\n          <Content>\n            <Typography variant={'h6'}>Online Users: {63}</Typography>\n          </Content>\n        </Footer>\n      </QuizLobbyContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roomTime: state.quizRoom.roomTime\n  }\n}\n\nconst QuizLobbyPage = connect(mapStateToProps, {\n\n})(QuizLobby)\n\nexport { QuizLobbyPage }","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { QuizLobbyPage } from '../pages';\nimport { joinquizRoutePath } from '.';\n\nlet quizPhase = 'lobby';\n\nconst QuizRouteComponent = (props) => {\n\n  const renderQuizPhaseOrRedirect = () => {\n    if (!props.isLoggedIn) {\n      return <Redirect to=\"/\" />\n    }\n    if (!props.quizRoom) {\n      return <Redirect to={joinquizRoutePath} />\n    }\n    switch (quizPhase) {\n      case 'lobby':\n        return <QuizLobbyPage />\n      default:\n        return <Redirect to=\"/\" />\n    }\n  }\n\n  const { component, ...other } = props;\n\n  return (\n    <Route {...other}>\n      {renderQuizPhaseOrRedirect()}\n    </Route>\n  )\n}\n\nconst mapStateStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n    quizRoom: state.quizRoom.quizRoom\n  }\n}\n\nconst QuizRoute = connect(mapStateStateToProps)(QuizRouteComponent)\n\nexport { QuizRoute };\n","import React from 'react';\nimport { HomePage, JoinQuizPage } from '../pages';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport { ProtectedRoute, joinquizRoutePath, QuizRoute, quizRoutePath } from '.';\n\nconst Router = (props) => {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <ProtectedRoute path={joinquizRoutePath} component={JoinQuizPage} />\n        <QuizRoute path={quizRoutePath} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport { Router };\n","export * from './ProtectedRoute';\nexport * from './QuizRoute';\nexport * from './Router';\n\nexport const joinquizRoutePath = \"/joinquiz\";\nexport const quizRoutePath = \"/quiz\";\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setHubConnection } from './redux/actions/ServerActions';\nimport { setQuizRoomTime } from './redux/actions/QuizRoomActions';\nimport { quizrHubUrl } from './api/hub';\nimport * as signalR from '@microsoft/signalr';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './global/styles/theme';\nimport styled from 'styled-components';\nimport { Router } from './routing';\nimport LoadingOverlay from 'react-loading-overlay';\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass App extends Component {\n  state = {\n    isHubConnectionLoading: false,\n    errorLoadingHubConnection: false\n  }\n\n  setIsHubConnectionLoading = (loading) => {\n    this.setState({ isHubConnectionLoading: loading })\n  }\n\n  componentDidMount() {\n    this.setIsHubConnectionLoading(true);\n\n    let connection = new signalR.HubConnectionBuilder()\n      .withUrl(quizrHubUrl, signalR.HttpTransportType.WebSockets)\n      .withAutomaticReconnect()\n      .build();\n\n    connection.onreconnecting(() => { this.setIsHubConnectionLoading(true) })\n    connection.onreconnected(() => { this.setIsHubConnectionLoading(false) })\n    \n    connection.start()\n      .then(() => {\n        this.props.setHubConnection(connection);\n        this.setIsHubConnectionLoading(false);\n      })\n      .catch((err) => {\n        this.setIsHubConnectionLoading(false);\n        this.setState({ errorLoadingHubConnection: true });\n      })\n\n      connection.on('UpdateRoomTimer', (time) => {\n        this.props.setQuizRoomTime(time);\n      })\n  }\n\n  determineLoadingOverlayText = () => {\n    if (this.state.errorLoadingHubConnection) {\n      return \"Error contacting server. Please refresh page to try again!\"\n    }\n    else if (this.state.isHubConnectionLoading) {\n      return \"\"\n    }\n    else if (this.props.isLoggingIn)\n      return \"Logging in\"\n    else if (this.props.isAddingUserToQuizRoom)\n      return \"Joining Quiz\"\n    else\n      return \"\"\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <LoadingOverlay\n          active={this.state.isHubConnectionLoading || this.props.isLoggingIn || this.state.errorLoadingHubConnection || this.props.isAddingUserToQuizRoom}\n          spinner={!this.state.errorLoadingHubConnection}\n          fadeSpeed={0}\n          text={this.determineLoadingOverlayText()}\n          styles={{\n            spinner: (base) => ({\n              ...base,\n              '& svg circle': {\n                stroke: `${theme.palette.primary[theme.palette.type]}`\n              }\n            }),\n            content: (base) => ({\n              ...base,\n              fontFamily: theme.typography.fontFamily\n            }),\n            overlay: (base) => ({\n              ...base,\n              zIndex: 2000\n            })\n          }}\n        >\n          <CssBaseline />\n          <AppContainer>\n            <Router />\n          </AppContainer>\n        </LoadingOverlay>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggingIn: state.auth.isLoggingIn,\n    isAddingUserToQuizRoom: state.quizRoom.isAddingUserToQuizRoom\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setHubConnection,\n  setQuizRoomTime\n})(App);\n","// hub calls\n\nexport const quizrHubDevelopmentUrl = \"https://localhost:44328/quizrhub\";\nexport const quizrHubProductionUrl = \"https://quizr-api.herokuapp.com/quizrhub\";\nexport const quizrHubDevelopmentMacUrl = \"https://localhost:5001/quizrhub\";\n\nexport const quizrHubUrl = quizrHubProductionUrl;\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION, SET_IS_HUB_CONNECTION_LOADING } from './types';\n\nexport const setUsersOnline = (usersOnline) => {\n  return {\n    type: SET_USERS_ONLINE,\n    payload: usersOnline\n  }\n}\n\nexport const setHubConnection = (hubConnection) => {\n  return {\n    type: SET_HUB_CONNECTION,\n    payload: hubConnection\n  }\n}\n\nexport const setIsHubConnectionLoading = (isHubConnectionLoading) => {\n  return {\n    type: SET_IS_HUB_CONNECTION_LOADING,\n    payload: isHubConnectionLoading\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './helpers/serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}