{"version":3,"sources":["redux/reducers/AuthReducer.js","redux/reducers/ServerReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store/index.js","api/hub/index.js","global/styles/theme.js","routing/ProtectedRoute.js","pages/Home/style.js","global/components/AppHeader.js","pages/Home/HomePage.js","redux/actions/AuthActions.js","pages/JoinQuiz/JoinQuizPage.js","routing/Router.js","App.js","redux/actions/ServerActions.js","helpers/serviceWorker.js","index.js"],"names":["INITIAL_STATE","authToken","user","isLoggedIn","hubConnection","usersOnline","combineReducers","auth","state","action","type","payload","server","middleware","ReduxThunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","quizrHubProductionUrl","theme","createMuiTheme","palette","typography","fontFamily","ProtectedRoute","connect","props","component","other","to","HomePageContainer","styled","div","AuthFormTextContainer","AuthForm","form","AppHeader","AppBar","position","color","Toolbar","HeaderText","variant","buttons","Button","defaultProps","Typography","minUsernameInputTextLength","Home","usernameInputText","submitAuthenticationFormDisable","submitAuthenticationFormError","handleUsernameInputTextChange","e","setState","target","value","validateFormFields","length","handleSubmitAuthenticationForm","preventDefault","connection","invoke","then","console","info","setIsLoggedIn","setUser","history","push","catch","err","log","toString","onSubmit","this","TextField","id","label","onChange","error","helperText","endIcon","Person","disabled","onClick","Component","HomePage","JoinQuizPage","Router","basename","exact","path","AppContainer","setHubConnection","useEffect","signalR","withUrl","build","start","alert","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0664e560.chunk.js","sourcesContent":["import { SET_AUTH_TOKEN, SET_USER, SET_IS_LOGGED_IN } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  authToken: '',\r\n  user: '',\r\n  isLoggedIn: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_TOKEN:\r\n      return { ...state, authToken: action.payload }\r\n    case SET_USER:\r\n      return { ...state, user: action.payload }\r\n    case SET_IS_LOGGED_IN:\r\n      return { ...state, isLoggedIn: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  hubConnection: null,\r\n  usersOnline: null // How many users are online\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_HUB_CONNECTION:\r\n      return { ...state, hubConnection: action.payload }\r\n    case SET_USERS_ONLINE:\r\n      return { ...state, usersOnline: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ServerReducer from './ServerReducer';\r\n\r\nexport default combineReducers({\r\n  auth: AuthReducer,\r\n  server: ServerReducer\r\n})\r\n","// Auth types\r\nexport const SET_AUTH_TOKEN = 'AUTH/SET_AUTH_TOKEN';\r\nexport const SET_USER = 'AUTH/SET_USER';\r\nexport const SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN';\r\n\r\n// Server types\r\nexport const SET_USERS_ONLINE = 'SERVER/USERS_ONLINE';\r\nexport const SET_HUB_CONNECTION = 'SERVER/SET_HUBCONNECTION';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from '../reducers';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nlet middleware = [ReduxThunk];\r\n\r\nconst store = createStore(reducer, {}, composeWithDevTools(\r\n  applyMiddleware(...middleware),\r\n));\r\n\r\nexport default store;\r\n","// hub calls\r\n\r\nexport const quizrHubDevelopmentUrl = \"https://localhost:44328/quizrhub\";\r\nexport const quizrHubProductionUrl = \"https://quizr-api.herokuapp.com/quizrhub\";\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Varela Round', sans-serif\"\r\n  }\r\n})\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ProtectedRouteComponent = (props) => {\r\n\r\n  const renderPageOrRedirect = () => {\r\n    if (props.isLoggedIn) {\r\n      return <props.component />\r\n    } else {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n\r\n  const {component, ...other} = props;\r\n\r\n  return (\r\n    <Route {...other}>\r\n      {\r\n        renderPageOrRedirect()\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nconst mapStateStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.isLoggedIn\r\n  }\r\n}\r\n\r\nconst ProtectedRoute = connect(mapStateStateToProps)(ProtectedRouteComponent)\r\n\r\nexport { ProtectedRoute };\r\n","import styled from 'styled-components';\r\n\r\nexport const HomePageContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const AuthFormTextContainer = styled.div`\r\n  display: flex;\r\n  padding-bottom: 1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const AuthForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n  width: 0.5rem;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 0.7rem;\r\n  }\r\n`;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst AppHeader = (props) => {\r\n  return (\r\n    <AppBar position=\"static\" color='primary'>\r\n      <Toolbar>\r\n        <HeaderText variant=\"h4\">Quizr</HeaderText>\r\n        { props.buttons && <Button color=\"inherit\">Create Quiz</Button>}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nAppHeader.defaultProps = {\r\n  buttons: true\r\n}\r\n\r\n// styles\r\nconst HeaderText = styled(Typography)`\r\n  flex: 1;\r\n`;\r\n\r\nexport { AppHeader };","import React, { Component, Fragment } from 'react';\r\nimport { Person } from '@material-ui/icons';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  // LinearProgress\r\n} from '@material-ui/core';\r\nimport {\r\n  HomePageContainer,\r\n  AuthFormTextContainer,\r\n  AuthForm,\r\n  // Divider\r\n} from './style';\r\nimport {\r\n  AppHeader\r\n} from '../../global/components';\r\nimport { connect } from 'react-redux';\r\nimport { setIsLoggedIn, setUser } from '../../redux/actions/AuthActions';\r\n\r\nconst minUsernameInputTextLength = 1;\r\n// const minPasswordInputTextLength = 1;\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    usernameInputText: '',\r\n    // passwordInputText: '',\r\n    submitAuthenticationFormDisable: true,\r\n    submitAuthenticationFormError: false\r\n  }\r\n\r\n  handleUsernameInputTextChange = (e) => {\r\n    this.setState({ usernameInputText: e.target.value }, () => {\r\n      this.validateFormFields();\r\n    })\r\n  }\r\n\r\n  // handlePasswordInputTextChange = (e) => {\r\n  //   this.setState({ passwordInputText: e.target.value }, () => {\r\n  //     this.validateFormFields();\r\n  //   })\r\n  // }\r\n\r\n  validateFormFields = () => {\r\n    if (\r\n      this.state.usernameInputText.length >= minUsernameInputTextLength\r\n      // && this.state.passwordInputText.length >= minPasswordInputTextLength\r\n    ) {\r\n      this.setState({ submitAuthenticationFormDisable: false });\r\n    } else {\r\n      this.setState({ submitAuthenticationFormDisable: true });\r\n    }\r\n  }\r\n\r\n  handleSubmitAuthenticationForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Login\r\n    this.props.connection.invoke(\"Login\", this.state.usernameInputText)\r\n      .then(user => {\r\n        console.info(`Logged in as user ${user}`);\r\n        this.props.setIsLoggedIn(true);\r\n        this.props.setUser(user);\r\n        this.props.history.push('/joinquiz');\r\n      })\r\n      .catch(err => {\r\n        console.log(err.toString())\r\n        this.setState({ submitAuthenticationFormError: true })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <AppHeader />\r\n        {/* <LinearProgress/> */}\r\n        <HomePageContainer>\r\n          <AuthForm onSubmit={this.handleSubmitAuthenticationForm}>\r\n            <AuthFormTextContainer>\r\n              <TextField\r\n                id='username-input'\r\n                label='Username'\r\n                value={this.state.usernameInputText}\r\n                onChange={e => this.handleUsernameInputTextChange(e)}\r\n                variant='outlined'\r\n                error={this.state.submitAuthenticationFormError}\r\n                helperText={this.state.submitAuthenticationFormError ? 'Username already being used' : null}\r\n              />\r\n              {/* <Divider />\r\n              <TextField\r\n                id='password-input'\r\n                label='Password'\r\n                value={this.state.passwordInputText}\r\n                onChange={e => this.handlePasswordInputTextChange(e)}\r\n                variant='outlined'\r\n                type=\"password\"\r\n              /> */}\r\n            </AuthFormTextContainer>\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              endIcon={<Person />}\r\n              disabled={this.state.submitAuthenticationFormDisable}\r\n              onClick={this.handleSubmitAuthenticationForm}\r\n              type=\"submit\"\r\n            >\r\n              Connect\r\n          </Button>\r\n          </AuthForm>\r\n        </HomePageContainer>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    connection: state.server.hubConnection\r\n  }\r\n}\r\n\r\nconst HomePage = connect(mapStateToProps, {\r\n  setIsLoggedIn,\r\n  setUser\r\n})(Home);\r\n\r\nexport {\r\n  HomePage\r\n};\r\n","import { SET_USER, SET_IS_LOGGED_IN } from './types';\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const setIsLoggedIn = (isLoggedIn) => {\r\n  return {\r\n    type: SET_IS_LOGGED_IN,\r\n    payload: isLoggedIn\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AppHeader } from '../../global/components';\r\n\r\nclass JoinQuizPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppHeader buttons={false} />\r\n        <h1>Join Quiz Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { JoinQuizPage };","import React from 'react';\r\nimport { HomePage, JoinQuizPage } from '../pages';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport { ProtectedRoute } from '.';\r\n\r\nconst Router = (props) => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <ProtectedRoute path=\"/joinquiz\" component={JoinQuizPage} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport { Router };\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setHubConnection } from './redux/actions/ServerActions';\r\nimport { quizrHubProductionUrl } from './api/hub';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport theme from './global/styles/theme';\r\nimport styled from 'styled-components';\r\nimport { Router } from './routing';\r\n\r\nconst AppContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    let connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(quizrHubProductionUrl)\r\n      .build();\r\n\r\n    connection.start()\r\n      .then(() => {\r\n        alert('granted')\r\n        props.setHubConnection(connection);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      })\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppContainer>\r\n        <Router />\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default connect(null,{\r\n  setHubConnection\r\n})(App);\r\n","import { SET_USERS_ONLINE, SET_HUB_CONNECTION } from './types';\r\n\r\nexport const setUsersOnline = (usersOnline) => {\r\n  return {\r\n    type: SET_USERS_ONLINE,\r\n    payload: usersOnline\r\n  }\r\n}\r\n\r\nexport const setHubConnection = (hubConnection) => {\r\n  return {\r\n    type: SET_HUB_CONNECTION,\r\n    payload: hubConnection\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport * as serviceWorker from './helpers/serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}